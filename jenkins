pipeline{

      agent any
        tools {
     jdk 'JAVA_HOME'
     maven 'M2_HOME'
  }
     
 environment {

         DOCKERHUB_CREDENTIALS = credentials('dockerhub')
	 }
	 
        stages{

            


	        stage('Build') {
      		    steps {
        		sh 'mvn -B -DskipTests clean package'
      		          }
            	}
		
		
		 stage('JUnit/Mockito'){
                steps {
                sh '''mvn -version
                mvn -B -DskipTests clean package'''
                sh 'mvn test'
                echo """les tests sont charg√©s"""
                }
		
            }
           
		  
		   
		   
		   
		   
		   
		   
		   stage("upload livrable /nexus") {
                                           steps {
                                         nexusArtifactUploader artifacts:
                                          [[
                                          artifactId: 'achat',
                                          classifier: '',
                                          file: 'target/springprojet.jar',
                                           type: 'jar']],
                                            credentialsId: 'nexus',
                                             groupId: 'tn.esprit.rh',
                                             nexusUrl: '192.168.33.10:8081',
                                              nexusVersion: 'nexus3',
                                               protocol: 'http',
                                                repository: 'app-release/',
                                                version: '1.0'
                                           } 
                                           }
	
	
	
	
	
	
		       stage('Docker build ') {
            steps{
                script{
                    sh 'docker build -t syrineslimeni/springprojet . '
                }
		
		
		
            }
        }

             stage("DockerLogin") {
                steps {
                sh 'docker login --username syrineslimeni --password dockerhubb'
                }
                }

  	 stage("DockerPush") {
                 steps {
                 sh 'docker push syrineslimeni/springprojet'
                }
                }
           
            
             

              stage("DockerCompose") {
                 steps {
                 sh 'docker-compose up -d '
                }
	
                }
		     } 
		  /*   
		     stage("Send Email"){
           steps{
               emailext attachLog: true, body: "${env.BUILD_URL} has result ${currentBuild.result}", compressLog: true, subject: "Status of pipeline: ${currentBuild.fullDisplayName}", to: 'syrine.slimeni@esprit.tn'
           }
       }
        
     
      }*/
		   
}
