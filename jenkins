pipeline{

      agent any
        tools {
     jdk 'JAVA_HOME'
     maven 'M2_HOME'
  }
     
 environment {

         DOCKERHUB_CREDENTIALS = credentials('dockerhub')
	 }
	 
        stages{

            


	        stage('Build') {
      		    steps {
        		sh 'mvn -B -DskipTests clean package'
      		          }
            	}
		
		stage('Clean') {
                 steps{
                    sh "mvn -B -DskipTests clean  "
                    }
                }
		
		
		 stage('Test unitaire JUnit/Mockito'){
                steps {
                sh '''mvn -version
                mvn -B -DskipTests clean package'''
                sh 'mvn test'
                echo """Bravo!"""
                }
            }
	    
	    /*
	    stage("Test statique SonarQube Analysis") {
                       steps {
                         withSonarQubeEnv('sonar') {
                           sh 'mvn clean -DskipTests package sonar:sonar'
                         }
                       }
                     }
		  
		*/ 

		
		stage("upload livrable /nexus") {
                                           steps {
                                         nexusArtifactUploader artifacts:
                                          [[
                                          artifactId: 'achat',
                                          classifier: '',
                                          file: 'target/springprojet.jar',
                                           type: 'jar']],
                                            credentialsId: 'nexus',
                                             groupId: 'tn.esprit.rh',
                                             nexusUrl: '192.168.56.3:8081',
                                              nexusVersion: 'nexus3',
                                               protocol: 'http',
                                                repository: 'simpleapp-release/',
                                                version: '1.0'
                                           } 
                                           }
	
		
           
		     
		 

         stage('Build docker image') {
            steps{
                script{
                    sh 'docker build -t oumaima181/springprojet . '
                }
		
		
		
            }
        }

             stage("DockerLogin") {
                steps {
                sh 'docker login --username oumaima181 --password 181jFT2148*'
                }
                }

   stage("DockerPush") {
                 steps {
                 sh 'docker push oumaima181/springprojet'
                }
                }
           
            
             

              stage("DockerCompose") {
                 steps {
                 sh 'docker-compose up -d '
                }
                }
		     } 
		     
		     post {
		
                success {
                     mail to: "oumaima.benjammour@esprit.tn",
                            subject: "Build sucess",
                            body: "sucess"
                    echo 'successful'
                }
                failure {
                     mail to: "oumaima.benjammour@esprit.tn",
                            subject: "Build failed",
                            body: "failed"
                    echo 'failed'
               }
	}
}
